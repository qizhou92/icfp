(set-option :fixedpoint.engine duality)
(declare-rel R1 (Int))
(declare-rel R2 (Int Int Int))
(declare-rel R3 (Int Int Int Int))
(declare-var f1 Int)
(declare-var f2 Int)
(declare-var o1 Int)
(declare-var o2 Int)
(declare-var o3 Int)
(declare-var o4 Int)
(declare-var o5 Int)
(declare-var o6 Int)
(declare-rel goal ())
(rule (=> (and (= f1 o1) (= f2 o2)) (R3 f1 f2 o1 o2)))
(rule (=> (and (R3 f1 f2 o1 o2) (= o1 1) (= o2 o5) (= f1 o3) (= f2 o4)) (R2 o3 o4 o5)))
(rule (=> (and (R2 o3 o4 o5) (= o4 (+ o3 1)) (= o5 o6)) (R1 o6)))
(rule (=> (and (R1 o6) (not (= o6 2))) goal))
(query goal :print-certificate true)