(set-option :fixedpoint.engine duality)
(declare-rel R1 (Int Int))
(declare-rel R2 (Int))
(declare-rel R3 (Int Int Int Int))
(declare-rel R4 (Int Int))
(declare-rel R5 (Int Int))
(declare-var a Int)
(declare-var b Int)
(declare-var x Int)
(declare-var output Int)
(declare-var output1 Int)
(declare-var output2 Int)
(declare-rel goal ())
(rule (=> true (R2 x)))
(rule (=> true (R1 a b)))
(rule (=> (and (R1 a b) (R2 x ) (= x a)) (R3 a b x b)))
(rule (=> (= output (+ x 1) ) (R4 x output)))
(rule (=> (and (R4 a b) (R3 a b x output1) ) (R5 x output1)))
(rule (=> (and (R5 x output) (= x 2) (not (= output 3))) goal))
(query goal :print-certificate true)